################################################################################
##
## Filename:	auto-data/vpktpassthru.txt
## {{{
## Project:	10Gb Ethernet switch
##
## Purpose:	
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
## }}}
## Copyright (C) 2023, Gisselquist Technology, LLC
## {{{
## This file is part of the ETH10G project.
##
## The ETH10G project contains free software and gateware, licensed under the
## terms of the 3rd version of the GNU General Public License as published by
## the Free Software Foundation.
##
## This project is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
## }}}
## License:	GPL, v3, as defined and found on www.gnu.org,
## {{{
##		http://www.gnu.org/licenses/gpl.html
##
################################################################################
##
## }}}
@PREFIX=vpktsrc
@$NADDR=4
@SLAVE.BUS=wb32
@SLAVE.TYPE=DOUBLE
@MASTER.BUS=wbwide
@MASTER.ANSPREFIX=dma_
@MASTER.TYPE=DMA
@OSTREAM=vpktsrc_axin
@INT.TXPKT.WIRE=@$(PREFIX)_int
@INT.TXPKT.PIC=syspic
@MAIN.DEFNS=
	// @$(PREFIX) stream definition(s)
	// {{{
	wire	@$(OSTREAM)_valid, @$(OSTREAM)_ready,
		@$(OSTREAM)_last, @$(OSTREAM)_abort;
	wire	[31:0]	@$(OSTREAM)_data;
	wire	[1:0]	@$(OSTREAM)_bytes;
	// }}}
@MAIN.INSERT=
	////////////////////////////////////////////////////////////////////////
	//
	// @$(PREFIX)
	// {{{
	mem2pkt #(
		.DW(@$(MASTER.BUS.WIDTH)),
		.AW(@$(MASTER.BUS.AWID))
	) u_@$(PREFIX) (
		// {{{
		.i_clk(@$(SLAVE.BUS.CLOCK.WIRE)),
		.i_reset(@$(SLAVE.BUS.CLOCK.RESET)),
		@$(SLAVE.ANSIPORTLIST),
		@$(MASTER.ANSIPORTLIST),
		.M_AXIN_VALID(@$(OSTREAM)_valid),
		.M_AXIN_READY(@$(OSTREAM)_ready),
		.M_AXIN_DATA(@$(OSTREAM)_data),
		.M_AXIN_BYTES(@$(OSTREAM)_bytes),
		.M_AXIN_LAST(@$(OSTREAM)_last),
		.M_AXIN_ABORT(@$(OSTREAM)_abort),
		.o_int(@$(PREFIX)_int)
		// }}}
	);
	// }}}
@RTL.MAKE.GROUP=NETSRC
@RTL.MAKE.SUBD=net
@RTL.MAKE.FILES=mem2pkt.v
##
################################################################################
##
@PREFIX=vpktmem
@NADDR=4
@SLAVE.BUS=wb32
@SLAVE.ANSPREFIX=ctrl_
@SLAVE.TYPE=DOUBLE
@MASTER.BUS=wbwide
@MASTER.ANSPREFIX=wb_
@MASTER.TYPE=DMA
@ISTREAM=vpktsrc_axin
@OSTREAM=@$(PREFIX)_axin
@MAIN.DEFNS=
	// @$(PREFIX) stream definition(s)
	// {{{
	wire	@$(OSTREAM)_valid, @$(OSTREAM)_ready,
		@$(OSTREAM)_last, @$(OSTREAM)_abort;
	wire	[31:0]	@$(OSTREAM)_data;
	wire	[1:0]	@$(OSTREAM)_bytes;
	// }}}
@MAIN.INSERT=
	pktvfifo #(
		// {{{
		.BUSDW(@$(MASTER.BUS.WIDTH)),
		.PKTDW(32),
		.AW(@$(MASTER.BUS.AWID))
		// }}}
	) u_@$(PREFIX) (
		// {{{
		.i_clk(@$(SLAVE.BUS.CLOCK.WIRE)),
		.i_reset(@$(SLAVE.BUS.CLOCK.RESET)),
		@$(SLAVE.ANSIPORTLIST),
		.S_VALID(@$(ISTREAM)_valid),
		.S_READY(@$(ISTREAM)_ready),
		.S_DATA(@$(ISTREAM)_data),
		.S_BYTES(@$(ISTREAM)_bytes),
		.S_LAST(@$(ISTREAM)_last),
		.S_ABORT(@$(ISTREAM)_abort),
		@$(MASTER.ANSIPORTLIST),
		.M_VALID(@$(OSTREAM)_valid),
		.M_READY(@$(OSTREAM)_ready),
		.M_DATA(@$(OSTREAM)_data),
		.M_BYTES(@$(OSTREAM)_bytes),
		.M_LAST(@$(OSTREAM)_last),
		.M_ABORT(@$(OSTREAM)_abort)
		// }}}
	);
@RTL.MAKE.GROUP=PKTVFIFO
@RTL.MAKE.SUBD=net
@RTL.MAKE.FILES=pktvfifo.v pktvfiford.v pktvfifowr.v axinwidth.v netfifo.v
##
################################################################################
##
@PREFIX=vpktsnk
@$NADDR=4
@SLAVE.BUS=wb32
@SLAVE.TYPE=DOUBLE
@MASTER.BUS=wbwide
@MASTER.ANSPREFIX=dma_
@MASTER.TYPE=DMA
@ISTREAM=vpktmem_axin
@INT.RXPKT.WIRE=@$(PREFIX)_int
@INT.RXPKT.PIC=syspic
@MAIN.INSERT=
	////////////////////////////////////////////////////////////////////////
	//
	// @$(PREFIX)
	// {{{
	pkt2mem #(
		.DW(@$(MASTER.BUS.WIDTH)),
		.AW(@$(MASTER.BUS.AWID))
	) u_@$(PREFIX) (
		// {{{
		.i_clk(@$(SLAVE.BUS.CLOCK.WIRE)),
		.i_reset(@$(SLAVE.BUS.CLOCK.RESET)),
		@$(SLAVE.ANSIPORTLIST),
		.S_AXIN_VALID(@$(ISTREAM)_valid),
		.S_AXIN_READY(@$(ISTREAM)_ready),
		.S_AXIN_DATA( @$(ISTREAM)_data),
		.S_AXIN_BYTES(@$(ISTREAM)_bytes),
		.S_AXIN_LAST( @$(ISTREAM)_last),
		.S_AXIN_ABORT(@$(ISTREAM)_abort),
		@$(MASTER.ANSIPORTLIST),
		.o_int(@$(PREFIX)_int)
		// }}}
	);
	// }}}
@RTL.MAKE.GROUP=NETSNK
@RTL.MAKE.SUBD=net
@RTL.MAKE.FILES=pkt2mem.v
