################################################################################
##
## Filename:	autodata/fan.txt
## {{{
## Project:	10Gb Ethernet switch
##
## Purpose:	Drive the FAN PWMs, while measuring temperature
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
## }}}
## Copyright (C) 2023, Gisselquist Technology, LLC
## {{{
## This file is part of the ETH10G project.
##
## The ETH10G project contains free software and gateware, licensed under the
## terms of the 3rd version of the GNU General Public License as published by
## the Free Software Foundation.
##
## This project is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
## }}}
## License:	GPL, v3, as defined and found on www.gnu.org,
## {{{
##		http://www.gnu.org/licenses/gpl.html
##
################################################################################
##
## }}}
@PREFIX=fan
@DEVID=FAN
@NADDR=8
@ACCESS=@$(DEVID)_ACCESS
@SLAVE.BUS=wb32
@SLAVE.TYPE=OTHER
@TOP.PORTLIST=
			io_temp_sda, io_temp_scl,
			o_fan_pwm, o_fan_sys, i_fan_tach
@TOP.IODECL=
	inout	wire	io_temp_sda, io_temp_scl;
	output	wire	o_fan_pwm, o_fan_sys;
	input	wire	i_fan_tach;
@TOP.DEFNS=
	// @$(DEVID) definitions
	// {{{
	wire	i_@$(PREFIX)_sda, i_@$(PREFIX)_scl,
		o_@$(PREFIX)_sda, o_@$(PREFIX)_scl;
	// }}}
@TOP.INSERT=
	////////////////////////////////////////////////////////////////////////
	//
	// @$(DEVID) IO buffers
	// {{{

	// We need these in order to (properly) ensure the high impedance
	// states (pull ups) of the I2C I/O lines.  Our goals are:
	//
	//	o_@$(PREFIX)_X	io_@$(PREFIX)_X		Derived:T
	//	1'b0		1'b0			1'b0
	//	1'b1		1'bz			1'b1
	//
	IOBUF @$(PREFIX)sclp(
		// {{{
		.I(1'b0),
		.T(o_@$(PREFIX)_scl),
		.O(i_@$(PREFIX)_scl),
		.IO(io_temp_scl)
		// }}}
	);

	IOBUF @$(PREFIX)sdap(
		// {{{
		.I(1'b0),
		.T(o_@$(PREFIX)_sda),
		.O(i_@$(PREFIX)_sda),
		.IO(io_temp_sda)
		// }}}
	);
	// }}}
@TOP.MAIN=
		// @$(DEVID)/@$(PREFIX)
		i_@$(PREFIX)_sda, i_@$(PREFIX)_scl,
		o_@$(PREFIX)_sda, o_@$(PREFIX)_scl,
		o_fan_pwm, o_fan_sys, i_fan_tach
@MAIN.PORTLIST=
			i_@$(PREFIX)_sda, i_@$(PREFIX)_scl,
			o_@$(PREFIX)_sda, o_@$(PREFIX)_scl,
			o_fpga_pwm, o_sys_pwm, i_fan_tach
@MAIN.IODECL=
	// @$(DEVID) Port declarations
	// {{{
	input	wire	i_@$(PREFIX)_sda, i_@$(PREFIX)_scl;
	output	wire	o_@$(PREFIX)_sda, o_@$(PREFIX)_scl;
	output	wire	o_fpga_pwm, o_sys_pwm;
	input	wire	i_fan_tach;
	// }}}
@MAIN.DEFNS=
	// @$(DEVID)/@$(PREFIX) Controller
	// {{{
	// Verilator lint_off UNUSED
	wire	[31:0]	@$(PREFIX)_debug;
	// Verilator lint_on  UNUSED
	// }}}
@MAIN.INSERT=
	////////////////////////////////////////////////////////////////////////
	//
	// The @$(DEVID) Controller: @$(PREFIX)
	// {{{

	wbfan
	u_@$(PREFIX) (
		// {{{
		.i_clk(@$(SLAVE.BUS.CLOCK.WIRE)),
		.i_reset(@$(SLAVE.BUS.CLOCK.RESET)),
		@$(SLAVE.ANSIPORTLIST),
		.i_temp_sda(i_@$(PREFIX)_sda), .i_temp_scl(i_@$(PREFIX)_scl),
		.o_temp_sda(o_@$(PREFIX)_sda), .o_temp_scl(o_@$(PREFIX)_scl),
		//
		.o_fpga_pwm(o_fpga_pwm), .o_sys_pwm(o_sys_pwm),
		.i_fan_tach(i_fan_tach),
		//
		.temp_debug(@$(PREFIX)_debug)
		// }}}
	);
	// }}}
@MAIN.ALT=
	assign	o_@$(PREFIX)_scl = 1'b1;
	assign	o_@$(PREFIX)_sda = 1'b1;
##
## regdefs.h / regdefs.cpp
##
@REGS.NOTE=// Fan registers
@REGS.N=8
@REGS.0= 0 R_@$(DEVID)_FPGAPWM	@$(DEVID)_FPGAPWM
@REGS.1= 1 R_@$(DEVID)_SYSPWM	@$(DEVID)_SYSPWM
@REGS.2= 2 R_@$(DEVID)_TACH	@$(DEVID)_TACH
@REGS.3= 3 R_@$(DEVID)_TEMP	@$(DEVID)_TEMP
@REGS.4= 4 R_@$(DEVID)		@$(DEVID)_CTRL	
@REGS.5= 5 R_@$(DEVID)_OVW	@$(DEVID)_OVW	@$(DEVID)_OVERRIDE
@REGS.6= 6 R_@$(DEVID)_ADDR	@$(DEVID)_ADDR	@$(DEVID)_ADDRESS
@REGS.7= 7 R_@$(DEVID)_CKCOUNT  @$(DEVID)CLK	@$(DEVID)_CKCOUNT
##
## board.h
##
@BDEF.DEFN=
#ifndef	@$(DEVID)_H
#define	@$(DEVID)_H
	////////////////////////////////////////////////////////////////////////
	//
	// I2C CPU data structures
	// {{{
	////////////////////////////////////////////////////////////////////////
	//
	//
typedef struct  @$(DEVID)_S        {
	unsigned	fan_fpgapwm, fan_syspwm, fan_tach;
	int		fan_temp;
	unsigned	temp_control, temp_override, temp_address,
			temp_clkcount;
} @$(DEVID);

#endif	// @$(DEVID)_H
	// }}}
@BDEF.IONAME=_@$(PREFIX)
@BDEF.IOTYPE=@$(DEVID)
@BDEF.OSDEF=_BOARD_HAS_@$(DEVID)
@BDEF.OSVAL=static volatile @$(BDEF.IOTYPE) *const @$(BDEF.IONAME)=((@$(BDEF.IOTYPE) *)@$[0x%08x](REGBASE));
##
## Makefile insert info
##
@RTL.MAKE.GROUP=@$(DEVID)
@RTL.MAKE.SUBD=
## RTL.MAKE.FILES *should* also include dblfetch, wbi2ccpu, etc., but those are
## parts of other components,j so we don't include them here a second time
@RTL.MAKE.FILES=wbfan.v
##
